// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package houses

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const checkHouseExistence = `-- name: checkHouseExistence :exec
SELECT 1
FROM house
WHERE id = $1
`

func (q *Queries) checkHouseExistence(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, checkHouseExistence, id)
	return err
}

const createHouse = `-- name: createHouse :one
INSERT INTO house (address, year, developer, created_at)
VALUES ($1, $2, $3, clock_timestamp()::timestamp)
RETURNING id, address, year, developer, created_at, update_at
`

type createHouseParams struct {
	Address   string
	Year      int32
	Developer pgtype.Text
}

func (q *Queries) createHouse(ctx context.Context, arg createHouseParams) (House, error) {
	row := q.db.QueryRow(ctx, createHouse, arg.Address, arg.Year, arg.Developer)
	var i House
	err := row.Scan(
		&i.ID,
		&i.Address,
		&i.Year,
		&i.Developer,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}

const houseUpdated = `-- name: houseUpdated :exec
UPDATE house
SET update_at = clock_timestamp()::timestamp
WHERE id = $1
`

func (q *Queries) houseUpdated(ctx context.Context, id int64) error {
	_, err := q.db.Exec(ctx, houseUpdated, id)
	return err
}
