// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package orders

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createHouse = `-- name: createHouse :one
INSERT INTO house (address, year, developer)
VALUES ($1, $2, $3)
RETURNING id, address, year, developer, created_at, update_at
`

type createHouseParams struct {
	Address   string
	Year      int32
	Developer pgtype.Text
}

func (q *Queries) createHouse(ctx context.Context, arg createHouseParams) (House, error) {
	row := q.db.QueryRow(ctx, createHouse, arg.Address, arg.Year, arg.Developer)
	var i House
	err := row.Scan(
		&i.ID,
		&i.Address,
		&i.Year,
		&i.Developer,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}

const getOrder = `-- name: getOrder :one
SELECT id, address, year, developer, created_at, update_at
FROM house
WHERE id = $1
`

func (q *Queries) getOrder(ctx context.Context, id int64) (House, error) {
	row := q.db.QueryRow(ctx, getOrder, id)
	var i House
	err := row.Scan(
		&i.ID,
		&i.Address,
		&i.Year,
		&i.Developer,
		&i.CreatedAt,
		&i.UpdateAt,
	)
	return i, err
}
